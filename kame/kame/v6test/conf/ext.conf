############################################
# just ping
ping:\
	:ip6:icmp6echo:

############################################
# interval timer (msec)
wait500msec:\
	:interval 500:

############################################
#bad version: should be discarded
badver:\
	:ip6-badver:icmp6echo:
ip6-badver:\
	:ip6_ver#8:tc=ip6:

############################################
#non-zero traffic class
tclass:\
	:ip6-tc:icmp6echo:
ip6-tc:\
	:ip6_tc#150:tc=ip6:

############################################
#unknown extension header -> paramprob ptr=40
unknownhdr:\
	:ip6:hbh1:
ip6:\
        :ip6_flow#0:ip6_plen=auto:ip6_nxt=auto:ip6_hlim#255:\
        :ip6_src="fe80::2a0:24ff:fea8:6cf1":\
	:ip6_dst="fe80::260:97ff:fe47:9ba1":
hbh1:\
	:hbh_nxt#200:hbh_len#0:hbh_opts="hopts1":
hopts1:\
	:padn1:
padn1:\
	:padoptlen#4:
hopts2:\
	:padn2:
padn2:\
	:padoptlen#20:

############################################
#many many extension headers
manyhdr:\
	:ip6:hbh-m:dstopt1:dstopt1:dstopt1:dstopt1:dstopt1:dstopt1:\
	:dstopt1:dstopt1:dstopt1:dstopt1:dstopt1:dstopt1:dstopt1:\
	:dstopt1:dstopt1:dstopt1:dstopt1:dstopt1:dstopt1:dstopt1:\
	:dstopt1:dstopt1:dstopt1:dstopt1:dstopt1:dstopt1:dstopt1:\
	:dstopt1:dstopt1:dstopt1:dstopt1:dstopt1:dstopt1:dstopt1:\
	:dstopt1:dstopt1:dstopt1:dstopt1:dstopt1:dstopt1:dstopt1:\
	:dstopt1:dstopt1:dstopt1:dstopt1:dstopt1:dstopt1:dstopt1:\
	:dstopt1:dstopt1:dstopt1:dstopt1:dstopt1:dstopt1:dstopt1:\
	:dstopt1:dstopt1:dstopt1:dstopt1:dstopt1:dstopt1:dstopt1:\
	:dstopt1:dstopt1:dstopt1:dstopt1:dstopt1:dstopt1:dstopt1:\
	:dstopt1:dstopt1:dstopt1:dstopt1:dstopt1:dstopt1:dstopt1:\
	:dstopt1:dstopt1:dstopt1:dstopt1:dstopt1:dstopt1:dstopt1:\
	:dstopt1:dstopt1:dstopt1:dstopt1:dstopt1:dstopt1:dstopt1:\
	:dstopt1:dstopt1:dstopt1:dstopt1:dstopt1:dstopt1:dstopt1:\
	:dstopt1:dstopt1:dstopt1:dstopt1:dstopt1:dstopt1:dstopt1:\
	:dstopt1:dstopt1:dstopt1:dstopt1:dstopt1:dstopt1:dstopt1:\
	:dstopt1:dstopt1:dstopt1:dstopt1:dstopt1:dstopt1:dstopt1:\
	:icmp6echo:
hbh-m:\
	:hbh_nxt=auto:hbh_len#0:hbh_opts=opts-m:
opts-m:\
	:padn-m:
dstopt1:\
	:dst_nxt=auto:dst_len#0:dst_opts=opts-m:
padn-m:\
	:padoptlen#4:

############################################
#hop by hop options
#
# illegal order -> paramprob: ptr = 40
illodrhbh:\
	:ip6:dstopt1:hbh-m:icmp6echo:
#
# small jumbo payload -> paramprob: ptr = 44
smalljumbo:\
	:ip6-jumbo:hbh-sj:icmp6echo:
ip6-jumbo:\
	:ip6_plen#0:tc=ip6:
hbh-sj:\
	:hbh_nxt=auto:hbh_len#0:hbh_opts=opts-sj:
opts-sj:\
	:jumbo-small:
jumbo-small:\
	:jumbolen#576:
#
# non0 plen with jumbo opt -> paramprob: ptr = 42
illplenjumbo:\
	:ip6:hbh_j:icmp6echo:
hbh_j:\
	:hbh_nxt=auto:hbh_len#0:hbh_opts=opts-j:
opts-j:\
	:jumbo:
jumbo:\
	:jumbolen#70000:
#
# jumboopt with frghdr -> paramprob: ptr = 56
jumbofrg:\
	:ip6-jumbo:hbh_j:dstopt1:frghdr-j:icmp6echo:
frghdr-j:\
	:frghdr_nxt=auto:frghdr_off#0:frghdr_more#1:

#
# jumbo payload option which does not follow its alignment requirement.
#  -> paramprob: ptr = 45? discard?
unalignedopt:\
	:ip6-jumbo:hbh-unaligned:icmp6echo:
hbh-unaligned:\
	:hbh_nxt=auto:hbh_len#1:hbh_opts=opts_unaligned:
opts_unaligned:\
	:pad1:jumbo-small:padn5:
padn5:\
	:padoptlen#5:

#
# IPv6 Payload Length = 0, Next Header = HbH, Jumbo Payload option not present
#  -> paramprob: ptr = 4 (payload length field)
jumbolack:\
	:ip6-jumbo:hbh-nojumbo:
hbh-nojumbo:\
	:hbh_nxt=#59:hbh_len#0:hbh_opts="hopts1":

#
# long option(to see if kernel crashes)
longopt:\
	:ip6:hbh_lo:icmp6echo:
hbh_lo:\
	:hbh_nxt=auto:hbh_len#30:hbh_opts=opts-l:
opts-l:\
	:padn-long:
padn-long:\
	:padoptlen#244:

#
# many many options(to see if kernel crashes)
manyopt:\
	:ip6:hbh_mo:icmp6echo:
hbh_mo:\
	:hbh_nxt=auto:hbh_len#19:hbh_opts=opts-mo:icmp6echo:
#158 PAD1 options in total:
opts-m:\
	:pad1:pad1:pad1:pad1:pad1:pad1:pad1:pad1:pad1:pad1:\
	:pad1:pad1:pad1:pad1:pad1:pad1:pad1:pad1:pad1:pad1:\
	:pad1:pad1:pad1:pad1:pad1:pad1:pad1:pad1:pad1:pad1:\
	:pad1:pad1:pad1:pad1:pad1:pad1:pad1:pad1:pad1:pad1:\
	:pad1:pad1:pad1:pad1:pad1:pad1:pad1:pad1:pad1:pad1:\
	:pad1:pad1:pad1:pad1:pad1:pad1:pad1:pad1:pad1:pad1:\
	:pad1:pad1:pad1:pad1:pad1:pad1:pad1:pad1:pad1:pad1:\
	:pad1:pad1:pad1:pad1:pad1:pad1:pad1:pad1:pad1:pad1:\
	:pad1:pad1:pad1:pad1:pad1:pad1:pad1:pad1:pad1:pad1:\
	:pad1:pad1:pad1:pad1:pad1:pad1:pad1:pad1:pad1:pad1:\
	:pad1:pad1:pad1:pad1:pad1:pad1:pad1:pad1:pad1:pad1:\
	:pad1:pad1:pad1:pad1:pad1:pad1:pad1:pad1:pad1:pad1:\
	:pad1:pad1:pad1:pad1:pad1:pad1:pad1:pad1:pad1:pad1:\
	:pad1:pad1:pad1:pad1:pad1:pad1:pad1:pad1:pad1:pad1:\
	:pad1:pad1:pad1:pad1:pad1:pad1:pad1:pad1:pad1:pad1:\
	:pad1:pad1:pad1:pad1:pad1:pad1:pad1:pad1:

#
# HbH option header with illegal length field
#  hbh len field = 10(i.e. header len should be 88)
#    followd by a PadN option(option length = 84, but contains only 17 bytes)
#  -> kernel should discard the packet
illhdrlen:\
	:ip6:hbh_il:
hbh_il:\
	:hbh_nxt#58:hbh_len#10:hbh_opts=opts_il:
opts_il:\
	:padn_il:
padn_il:\
	:padoptlen#84:padoptreallen#17:

############################################
#routing header
#
# non-0 type
# with segleft 1 -> paramprob: ptr = 42
rthdrilltype1:\
	:ip6:rthdr-type1:icmp6echo:
# with segleft 1 -> icmp echo reply
rthdrilltype2:\
	:ip6:rthdr-type2:icmp6echo:
rthdr0:\
	:rthdr_nxt=auto:rthdr_type#0:rthdr0_hops#1:rthdr_segleft#1:
rthdr-type1:\
	:rthdr_nxt=auto:rthdr_len#8:rthdr_type#1:rthdr_segleft#1:
rthdr-type2:\
	:rthdr_segleft#0:tc=rthdr-type1:
#
# more than 24 hops -> paramprob: ptr = 41
rthdrmanyhops:\
	:ip6:rthdr-many:icmp6echo:
rthdr-many:\
	:rthdr_nxt=auto:rthdr_len#408:rthdr_type#0:rthdr0_hops#5:rthdr_segleft#1\
	:hop0="3ffe:501:4819:e000:2a0:24ff:fea8:6cf1":\
	:hop1="3ffe:501:4819:e000:2a0:24ff:fea8:6cf2":\
	:hop2="3ffe:501:4819:e000:2a0:24ff:fea8:6cf3":\
	:hop3="3ffe:501:4819:e000:2a0:24ff:fea8:6cf4":\
	:hop4="3ffe:501:4819:e000:2a0:24ff:fea8:6cf5":
#
# more than 24 seglefts -> paramprob: ptr = 43
rthdrlargeseglefts:\
	:ip6:rthdr-largeleft:icmp6echo:
rthdr-largeleft:\
	:rthdr_nxt=auto:rthdr_type#0:rthdr0_hops#1:rthdr_segleft#254\
	:hop0="3ffe:501:4819:e000:2a0:24ff:fea8:6cf1":
#
# multicast in routing header
rthdrwithmc:\
	:ip6:rthdr-mc:icmp6echo:
rthdr-mc:\
	:hop0="ff02::1":tc=rthdr0:
#
# unspecified in routing header
rthdrwithunspec:\
	:ip6:rthdr-unspec:icmp6echo:
rthdr-unspec:\
	:hop0="::":tc=rthdr0:


#
# loopback in routing header -> what should we do?? should return reply?
rthdrwithloopback:\
	:ip6:rthdr-lo:icmp6echo:
rthdr-lo:\
	:hop0="::1":tc=rthdr0:
#
# our own addrees in routing header
rthdrwithmine:\
	:ip6:rthdr-mine:icmp6echo:
rthdr-mine:\
	:rthdr0_hops#2:rthdr_nxt=auto:rthdr_type#0:rthdr_segleft#2:\
	:hop0="fe80::200:eff:fe42:2afc":\
	:hop1="fe80::200:eff:fe42:2afc":
#	:hop0="fe80::260:97ff:fe47:9ba1":\
#	:hop1="fe80::260:97ff:fe47:9ba1":
#h2	:hop0="fe80::200:f4ff:fe34:3b36":\
#	:hop1="fe80::200:f4ff:fe34:3b36":
#k	:hop0="fe80::2a0:24ff:feab:839b":\
#	:hop1="fe80::2a0:24ff:feab:839b":
#	:hop0="fe80::200:eff:fe38:f143":\
#f	:hop1="fe80::200:eff:fe38:f143":
#	:hop0="fe80::2a0:24ff:fea8:857b":\
#h	:hop1="fe80::2a0:24ff:fea8:857b"
#
# more than 1 routing headers -> should return echo reply
manyrthdr:\
	:ip6:rthdr-m1:dstopt1:rthdr-m2:rthdr-m1:icmp6echo:
rthdr-m1:\
	:hop0="fe80::200:eff:fe42:2afc":tc=rthdr0:
#	:hop0="fe80::200:eff:fe38:f143":tc=rthdr0:
#	:hop0="fe80::260:97ff:fe47:9ba1":tc=rthdr0:
#	:hop0="fe80::2a0:24ff:feab:839b":tc=rthdr0:
#	:hop0="fe80::2a0:24ff:fea8:857b":tc=rthdr0:
#	:hop0="fe80::200:eff:fe38:f143":tc=rthdr0:
rthdr-m2:\
	:tc=rthdr-m1:

############################################
# fragment header
#
# incompleted fragment
frghdr:\
	:frghdr_nxt=auto:frghdr_off#0:
# only first fragment -> time exceeded(fragment)
incmplfrg1:\
	:ip6:frghdr-i1:icmp6echo:
frghdr-i1:\
	:frghdr_more#1:tc=frghdr:
# only second(or later)fragment -> discard packet(no error)
incmplfrg2:\
	:ip6:frghdr-i2:icmp6echo:
frghdr-i2:\
	:frghdr_off#576:tc=frghdr:
# Fragment header with non-0 reserved field -> return echo reply
frgwithillrsv:\
	:ip6:frghdr-ir:icmp6echo:
frghdr-ir:\
	:frghdr_off#0:frghdr_rsv#255:frghdr_more#0:frghdr_nxt=auto:
# plen isn't multiply of 8 but with M bit -> paramprob: ptr=4
frgilllen:\
	:ip6:frghdr-i1:icmp6echo-f1:
icmp6echo-f1:\
	:icmp6_len#580:tc=icmp6echo:

#
# fragment which has too big offset -> paramprob ptr=42
#
# Case 1: we can detect too-big only by one packet.
frglargeoff1:\
	:ip6:frghdr-l1:icmp6echo-f2:
frghdr-l1:\
	:frghdr_off#65528:tc=frghdr:
icmp6echo-f2:\
	:icmp6_len#576:tc=icmp6echo:
#
#  Case 2: we can't detect too-big only by one packet.(can by the second packet)
# test: frglargeoff2 -> sleep -> frglargeoff3
#     -> paramprob ptr = 66 for the 2nd fragment(frglargeoff3)
frglargeoff2:\
	:ip6:hbh-lfrg:frghdr-l2:icmp6echo:
frghdr-l2:\
	:frghdr_nxt=auto:frghdr_off#65504:frghdr_more#1:frghdr_id#102:
hbh-lfrg:\
	:hbh_nxt=auto:hbh_len#2:hbh_opts="hopts2":
frglargeoff3:\
	:ip6:hbh-lfrg:frghdr-l3:icmp6echo:
frghdr-l3:\
	:frghdr_nxt=auto:frghdr_off#0:frghdr_more#1:frghdr_id#102:

#
# fragment which overlaps an existing fragment in the reassembly queue
# test1: # v6test frgovr1 frgovr2
#        -> time exceeded(fragment)
# test2: # v6test frgovr2 frgovr1
#        -> silently discard
#  in any case, must not return an icmp error(parameter problem).
frgovr1:\
	:ip6:frghdr:hbh1:icmp6echo-o:
frgovr2:\
	:ip6:frghdr-o:icmp6echo-o:
frghdr-o:\
	:frghdr_off#24:frghdr_more#0:tc=frghdr:
icmp6echo-o:\
	:icmp6_len#32:tc=icmp6echo:

#
# a fragment with the M bit being set and a large offset.
# test sequence: frghdr-lo2 -> frghdr-lo1
# expected result: ??
frghdr-lo1:\
	:frghdr_more#0:frghdr_nxt=auto:frghdr_off#0:
frghdr-lo2:\
	:frghdr:frghdr_off#8:frghdr_nxt=auto:
lofrg1:\
	:ip6:frghdr-lo1:icmp6echo:
lofrg2:\
	:ip6:frghdr-lo2:icmp6echo:

############################################
# Path MTU(ICMP TOOBIG message)
#
# too big smaller than 576
smalltoobig:\
	:ip6:icmp6err-stb:
icmp6err-stb:\
	:icmp6_type#2:icmp6_code#0:icmp6_mtu#128:
#
# too big larger than 1500
largetoobig:\
	:ip6:icmp6err-ltb:
icmp6err-ltb:\
	:icmp6_type#2:icmp6_code#0:icmp6_mtu#2000:
#
# (normal) too big, but the destination address is faked.
normaltoobig:\
	:ip6:icmp6err-ntb:ip6-ntb:
icmp6err-ntb:\
	:icmp6_type#2:icmp6_code#0:icmp6_mtu#1300:
ip6-ntb:\
        :ip6_flow#0:ip6_plen#0:ip6_nxt#6:ip6_hlim#255:\
        :ip6_src="3ffe:501::baa":\
	:ip6_dst="2001:100::baa":

#
# too big from local link(tbd)

############################################
# No Next Header
#
# A header followd by No next header
nnh:\
	:ip6:hbh-nnh:
hbh-nnh:\
	:hbh_nxt#59:hbh_len#0:hbh_opts="hopts1":
#
# Garbage after NNH(?)
nnh-g:\
	:ip6:hbh-nnh:icmp6echo:

############################################
# payload len = 0
paylen0:\
	:ip6-p0:
ip6-p0:\
	:ip6_nxt#58:tc=ip6:

############################################
# Authentication Header
#

# AH followed by many headers
ah-mhdr:\
	:ip6:authhdr:dstopta0:dstopta0:dstopta0:dstopta0:dstopta0:dstopta0:\
	:dstopta0:dstopta0:dstopta0:dstopta0:dstopta0:dstopta0:dstopta0:\
	:dstopta0:dstopta0:dstopta0:dstopta0:dstopta0:dstopta0:dstopta0:\
	:dstopta0:dstopta0:dstopta0:dstopta0:dstopta0:dstopta0:dstopta0:\
	:dstopta0:dstopta0:dstopta0:dstopta0:dstopta0:dstopta0:dstopta0:\
	:dstopta0:dstopta0:dstopta0:dstopta0:dstopta0:dstopta0:dstopta0:\
	:dstopta0:dstopta0:dstopta0:dstopta0:dstopta0:dstopta0:dstopta0:\
	:dstopta0:dstopta0:dstopta0:dstopta0:dstopta0:dstopta0:dstopta0:\
	:dstopta0:dstopta0:dstopta0:dstopta0:dstopta0:dstopta0:dstopta0:\
	:dstopta0:dstopta0:dstopta0:dstopta0:dstopta0:dstopta0:dstopta0:\
	:dstopta0:dstopta0:dstopta0:dstopta0:dstopta0:dstopta0:dstopta0:\
	:dstopta0:dstopta0:dstopta0:dstopta0:dstopta0:dstopta0:dstopta0:\
	:dstopta0:dstopta0:dstopta0:dstopta0:dstopta0:dstopta0:dstopta0:\
	:dstopta0:dstopta0:dstopta0:dstopta0:dstopta0:dstopta0:dstopta0:\
	:icmp6echo:

authhdr:\
	:ah_nxt=auto:ah_spi#100:ah_seq#1000:
dstopta0:\
	:dst_nxt=auto:dst_len#0:dst_opts=opts-a0:
opts-a0:\
	:pad1:pad1:pad1:pad1:pad1:pad1:

# AH followed by a dst opt hdr with many options
ah-mopt:\
	:ip6:authhdr:dstopta1:icmp6echo:
dstopta1:\
	:dst_nxt=auto:dst_len#19:dst_opts=opts-mo:

############################################
# ICMPv6
#
# UDP port unreach without UDP header
noportwithoutupper:\
	:ip6:icmp6err-noport1:ip6-err:
icmp6err-noport1:\
	:icmp6_type#1:icmp6_code#4:
ip6-err:\
	:ip6_nxt#17:tc=ip6:
#
# illegal ICMPv6 error
# -> silent discard
erricmperr1:\
	:ip6:hbh-err:icmp6err-err1:
erricmperr2:\
	:ip6:hbh-err:icmp6err-err2:
hbh-err:\
	:hbh_nxt=auto:hbh_len#0:hbh_opts="unknownopt-icmperr":
unknownopt-icmperr:\
	:unknownopt129:
unknownopt129:\
	:opttype#129:optlen#4:
icmp6err-err1:\
	:icmp6_type#1:icmp6_code#0:
icmp6err-err2:\
	:icmp6_type#126:icmp6_code#0:
# Fragment header followed by ICMP error -> what should we do?
erricmperr3:\
	:ip6:hbh-err:frghdr-ei1:icmp6err-err1:
frghdr-ei1:\
	:frghdr_off#0:tc=frghdr:

#unknown ICMP types
unknownerr:\
	:ip6:icmp6err-unknown:
icmp6err-unknown:\
	:icmp6_type#79:icmp6_code#1:
unknowninfo:\
	:ip6:icmp6err-unknowninfo:
icmp6err-unknowninfo:\
	:icmp6_type#179:icmp6_code#1:

############################################
#unknown option type
hopt-unknown:\
	:unknownopt1:
unknownopt1:\
	:opttype#30:optlen#4:

############################################
#echo request packet
icmp6echo:\
        :icmp6_type=echo:icmp6_code#0:icmp6_id#0:\
	:icmp6_seq#0:

############################################
#echo request packet
loopbackping:\
	:ether-t:ip6-lbdst:icmp6echo:
ip6-lbdst:\
	:ip6_dst="::1":tc=ip6:

############################################
# NDopt len = 0
ndoptlen0:\
	:ip6:nsolol0:
nsolol0:\
	:ns_tgt=auto:ns_opts=lladdropt0:
lladdropt0:\
	:ndopt0:srclladdr:
ndopt0:\
	:opttype#10:optlen#0:
srclladdr:\
	:lladdr="0:a0:24:a8:6c:f1":

############################################
# Many NDopts
manyndopt:\
	:ip6:nsolmanyopt:
nsolmanyopt:\
	:ns_tgt=auto:ns_opts=ndopt-many:
ndopt1:\
	:opttype#10:optlen#1:
ndopt-many:\
	:ndopt1:ndopt1:ndopt1:ndopt1:ndopt1:ndopt1:ndopt1:ndopt1:ndopt1:ndopt1:\
	:ndopt1:ndopt1:ndopt1:ndopt1:ndopt1:ndopt1:ndopt1:ndopt1:ndopt1:ndopt1:\
	:ndopt1:ndopt1:ndopt1:ndopt1:ndopt1:ndopt1:ndopt1:ndopt1:ndopt1:ndopt1:\
	:ndopt1:ndopt1:ndopt1:ndopt1:ndopt1:ndopt1:ndopt1:ndopt1:ndopt1:ndopt1:\
	:ndopt1:ndopt1:ndopt1:ndopt1:ndopt1:ndopt1:ndopt1:ndopt1:ndopt1:ndopt1:\
	:ndopt1:ndopt1:ndopt1:ndopt1:ndopt1:ndopt1:ndopt1:ndopt1:ndopt1:ndopt1:\
	:ndopt1:ndopt1:ndopt1:ndopt1:ndopt1:ndopt1:ndopt1:ndopt1:ndopt1:ndopt1:\
	:ndopt1:ndopt1:ndopt1:ndopt1:ndopt1:ndopt1:ndopt1:ndopt1:ndopt1:ndopt1:\
	:ndopt1:ndopt1:ndopt1:ndopt1:ndopt1:ndopt1:ndopt1:ndopt1:ndopt1:ndopt1:\
	:ndopt1:ndopt1:ndopt1:ndopt1:ndopt1:ndopt1:ndopt1:ndopt1:ndopt1:ndopt1:\
	:srclladdr:

############################################
# host aliases
optaddr:\
	:sumikawa="fe80::2a0:24ff:fea8:857b":\
	:kazu="fe80::2a0:24ff:feab:839b":\
	:fuji="fe80::200:eff:fe38:f143":
############################################
# ether aliases
ether-h:\
	:edst="0:a0:24:a8:85:7b":
ether-k:\
	:edst="0:a0:24:ab:83:9b":
ether-t:\
	:edst="0:60:97:47:9b:a1":
ether-f:\
	:edst="0:0:0e:38:f1:43":
ether-m:\
	:edst="0:a0:24:a5:49:90":
ether-h2:\
	:edst="0:0:f4:34:3b:36":
ether-l:\
	:edst="0:0:0e:42:2a:fc:
